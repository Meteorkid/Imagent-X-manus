version: '3.8'

networks:
  imagentx-network:
    driver: bridge
  mcp-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  rabbitmq-data:
    driver: local
  storage-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  mcp-config:
    driver: local

services:
  # ===== 原有服务 =====
  
  # PostgreSQL 数据库
  postgres:
    image: docker.m.daocloud.io/postgres:15
    container_name: imagentx-postgres
    environment:
      POSTGRES_DB: imagentx
      POSTGRES_USER: imagentx_user
      POSTGRES_PASSWORD: imagentx_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docs/sql/00_install_pgvector.sql:/docker-entrypoint-initdb.d/00_install_pgvector.sql:ro
      - ./docs/sql/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - imagentx-network
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U imagentx_user -d imagentx"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: imagentx-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - imagentx-network
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Imagent X 应用服务
  imagentx:
    image: ghcr.io/lucky-aeon/imagentx:latest
    container_name: imagentx-app
    environment:
      # 数据库配置
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: imagentx
      DB_USER: imagentx_user
      DB_PASSWORD: imagentx_pass
      
      # 应用配置
      SERVER_PORT: 8088
      FRONTEND_PORT: 3000
      NEXT_PUBLIC_API_BASE_URL: /api
      
      # Spring 配置
      SPRING_PROFILES_ACTIVE: prod
      JPA_DDL_AUTO: update
      SHOW_SQL: false
      
      # 用户配置
      IMAGENTX_ADMIN_EMAIL: admin@imagentx.top
      IMAGENTX_ADMIN_PASSWORD: admin123
      IMAGENTX_ADMIN_NICKNAME: Imagent X管理员
      IMAGENTX_TEST_ENABLED: false
      IMAGENTX_TEST_EMAIL: test@imagentx.top
      IMAGENTX_TEST_PASSWORD: test123
      IMAGENTX_TEST_NICKNAME: 测试用户
      
      # 消息队列配置
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      
      # 安全配置
      JWT_SECRET: please_change_this_in_production
      
      # 日志配置
      LOG_LEVEL_ROOT: warn
      LOG_LEVEL_APP: info
      
      # 文件存储
      FILE_STORAGE_PATH: /app/storage
      
    volumes:
      - storage-data:/app/storage
    ports:
      - "3000:3000"
      - "8088:8088"
    networks:
      - imagentx-network
      - mcp-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ===== MCP 监控组件 =====
  
  # Prometheus 监控
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./mcp-config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - mcp-network
    restart: unless-stopped

  # Grafana 可视化
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./mcp-config/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - mcp-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # MCP 网关服务
  mcp-gateway:
    image: ghcr.io/lucky-aeon/mcp-gateway:latest
    container_name: mcp-gateway
    environment:
      MCP_GATEWAY_API_KEY: imagentx-mcp-key-2024
      MCP_GATEWAY_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - mcp-network
    depends_on:
      - prometheus
      - grafana
    restart: unless-stopped

  # MCP 配置中心
  mcp-config-center:
    image: nginx:alpine
    container_name: mcp-config-center
    ports:
      - "8082:80"
    volumes:
      - ./mcp-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./mcp-config/configs:/usr/share/nginx/html:ro
    networks:
      - mcp-network
    restart: unless-stopped

  # MCP 任务调度器
  mcp-scheduler:
    image: python:3.11-alpine
    container_name: mcp-scheduler
    working_dir: /app
    volumes:
      - ./mcp-config/scheduler:/app
    command: >
      sh -c "pip install -r requirements.txt &&
             python scheduler.py"
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
      - MCP_GATEWAY_URL=http://mcp-gateway:8080
    networks:
      - mcp-network
    depends_on:
      - mcp-gateway
    restart: unless-stopped
