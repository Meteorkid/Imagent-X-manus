{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(npm run preview:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git status:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(git clean:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(node:*)",
      "Bash(npx:*)",
      "Bash(vi:*)",
      "Bash(nano:*)",
      "Bash(code:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(ps:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(docker:*)",
      "Bash(docker-compose:*)",
      "Bash(env:*)",
      "Bash(echo:*)",
      "Bash(pwd:*)",
      "Bash(cd:*)",
      "Bash(whoami:*)",
      "Bash(date:*)",
      "Bash(cal:*)",
      "Bash(df:*)",
      "Bash(du:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(history:*)",
      "Bash(alias:*)",
      "Bash(unalias:*)",
      "Bash(source:*)",
      "Bash(export:*)",
      "Bash(set:*)",
      "Bash(unset:*)",
      "Bash(read:*)",
      "Bash(sleep:*)",
      "Bash(wait:*)",
      "Bash(jobs:*)",
      "Bash(fg:*)",
      "Bash(bg:*)",
      "Bash(nice:*)",
      "Bash(nohup:*)",
      "Bash(screen:*)",
      "Bash(tmux:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(sftp:*)",
      "Bash(rsync:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(bzip2:*)",
      "Bash(bunzip2:*)",
      "Bash(xz:*)",
      "Bash(unxz:*)",
      "Bash(base64:*)",
      "Bash(md5:*)",
      "Bash(sha1:*)",
      "Bash(sha256:*)",
      "Bash(openssl:*)",
      "Bash(diff:*)",
      "Bash(patch:*)",
      "Bash(make:*)",
      "Bash(cmake:*)",
      "Bash(gcc:*)",
      "Bash(g++:*)",
      "Bash(clang:*)",
      "Bash(java:*)",
      "Bash(javac:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(brew:*)",
      "Bash(apt-get:*)",
      "Bash(yum:*)",
      "Bash(dnf:*)",
      "Bash(pacman:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(journalctl:*)",
      "Bash(logcat:*)",
      "Bash(dmesg:*)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(lsof:*)",
      "Bash(iptables:*)",
      "Bash(ufw:*)",
      "Bash(firewall-cmd:*)",
      "Bash(host:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(whois:*)",
      "Bash(ping:*)",
      "Bash(traceroute:*)",
      "Bash(mtr:*)",
      "Bash(netcat:*)",
      "Bash(telnet:*)",
      "Bash(ftp:*)",
      "Bash(smbclient:*)",
      "Bash(mount:*)",
      "Bash(umount:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(lsblk:*)",
      "Bash(blkid:*)",
      "Bash(uuidgen:*)",
      "Bash(uuid:*)",
      "Bash(dd:*)",
      "Bash(convert:*)",
      "Bash(identify:*)",
      "Bash(magick:*)",
      "Bash(ffmpeg:*)",
      "Bash(ffprobe:*)",
      "Bash(avconv:*)",
      "Bash(sox:*)",
      "Bash(lame:*)",
      "Bash(flac:*)",
      "Bash(oggenc:*)",
      "Bash(oggdec:*)",
      "Bash(mpv:*)",
      "Bash(vlc:*)",
      "Bash(mplayer:*)",
      "Bash(youtube-dl:*)",
      "Bash(yt-dlp:*)",
      "Bash(git clone:*)",
      "Bash(git init:*)",
      "Bash(git remote:*)",
      "Bash(git tag:*)",
      "Bash(git describe:*)",
      "Bash(git bisect:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git revert:*)",
      "Bash(git reflog:*)",
      "Bash(git blame:*)",
      "Bash(git show:*)",
      "Bash(git format-patch:*)",
      "Bash(git apply:*)",
      "Bash(git am:*)",
      "Bash(git shortlog:*)",
      "Bash(git log --graph:*)",
      "Bash(git log --oneline:*)",
      "Bash(git log --pretty:*)",
      "Bash(git config:*)",
      "Bash(git mv:*)",
      "Bash(git rm:*)",
      "Bash(git checkout -b:*)",
      "Bash(git branch -d:*)",
      "Bash(git push origin:*)",
      "Bash(git pull origin:*)",
      "Bash(git fetch origin:*)",
      "Bash(git merge origin/*)",
      "Bash(git rebase origin/*)",
      "Bash(git push --tags:*)",
      "Bash(git push --force:*)",
      "Bash(git push --force-with-lease:*)",
      "Bash(git stash pop:*)",
      "Bash(git stash drop:*)",
      "Bash(git stash list:*)",
      "Bash(git stash show:*)",
      "Bash(git clean:*)",
      "Bash(git clean -fd:*)",
      "Bash(git reset --hard:*)",
      "Bash(git reset --soft:*)",
      "Bash(git reset --mixed:*)",
      "Bash(git checkout --:*)",
      "Bash(git restore:*)",
      "Bash(git restore --staged:*)",
      "Bash(git switch:*)",
      "Bash(git switch -c:*)",
      "Bash(git merge --no-ff:*)",
      "Bash(git merge --squash:*)",
      "Bash(git rebase -i:*)",
      "Bash(git rebase --continue:*)",
      "Bash(git rebase --skip:*)",
      "Bash(git rebase --abort:*)",
      "Bash(git cherry-pick --continue:*)",
      "Bash(git cherry-pick --skip:*)",
      "Bash(git cherry-pick --abort:*)",
      "Bash(git bisect start:*)",
      "Bash(git bisect good:*)",
      "Bash(git bisect bad:*)",
      "Bash(git bisect skip:*)",
      "Bash(git bisect reset:*)",
      "Bash(git describe --tags:*)",
      "Bash(git describe --abbrev:*)",
      "Bash(git tag -a:*)",
      "Bash(git tag -d:*)",
      "Bash(git push origin --tags:*)",
      "Bash(git push origin --delete:*)",
      "Bash(git remote add:*)",
      "Bash(git remote remove:*)",
      "Bash(git remote rename:*)",
      "Bash(git remote set-url:*)",
      "Bash(git remote get-url:*)",
      "Bash(git remote -v:*)",
      "Bash(git remote update:*)",
      "Bash(git remote prune:*)",
      "Bash(git submodule:*)",
      "Bash(git submodule add:*)",
      "Bash(git submodule update:*)",
      "Bash(git submodule sync:*)",
      "Bash(git submodule foreach:*)",
      "Bash(git worktree:*)",
      "Bash(git worktree add:*)",
      "Bash(git worktree remove:*)",
      "Bash(git worktree list:*)",
      "Bash(git reflog expire:*)",
      "Bash(git gc --aggressive:*)",
      "Bash(git fsck:*)",
      "Bash(git verify-pack:*)",
      "Bash(git count-objects:*)",
      "Bash(git prune:*)",
      "Bash(git repack:*)",
      "Bash(git archive:*)",
      "Bash(git bundle:*)",
      "Bash(git bundle create:*)",
      "Bash(git bundle verify:*)",
      "Bash(git bundle list-heads:*)",
      "Bash(git bundle unbundle:*)",
      "Bash(git notes:*)",
      "Bash(git notes add:*)",
      "Bash(git notes show:*)",
      "Bash(git notes edit:*)",
      "Bash(git notes remove:*)",
      "Bash(git filter-repo:*)",
      "Bash(git filter-branch:*)",
      "Bash(git replace:*)",
      "Bash(git annotate:*)",
      "Bash(git grep:*)",
      "Bash(git grep -n:*)",
      "Bash(git grep -i:*)",
      "Bash(git grep -v:*)",
      "Bash(git log --grep:*)",
      "Bash(git log -S:*)",
      "Bash(git log -G:*)",
      "Bash(git log --follow:*)",
      "Bash(git log --since:*)",
      "Bash(git log --until:*)",
      "Bash(git log --author:*)",
      "Bash(git log --committer:*)",
      "Bash(git log --no-merges:*)",
      "Bash(git log --first-parent:*)",
      "Bash(git log --stat:*)",
      "Bash(git log --patch:*)",
      "Bash(git log --name-only:*)",
      "Bash(git log --name-status:*)",
      "Bash(git log --diff-filter:*)",
      "Bash(git log --find-renames:*)",
      "Bash(git log --find-copies:*)",
      "Bash(git log --find-copies-harder:*)",
      "Bash(git log --break-rewrites:*)",
      "Bash(git log --full-history:*)",
      "Bash(git log --simplify-merges:*)",
      "Bash(git log --simplify-by-decoration:*)",
      "Bash(git log --dense:*)",
      "Bash(git log --sparse:*)",
      "Bash(git log --full-diff:*)",
      "Bash(git log --log-size:*)",
      "Bash(git log --notes:*)",
      "Bash(git log --show-notes:*)",
      "Bash(git log --no-notes:*)",
      "Bash(git log --standard-notes:*)",
      "Bash(git log --no-standard-notes:*)",
      "Bash(git log --show-signature:*)",
      "Bash(git log --no-show-signature:*)",
      "Bash(git log --show-linear-break:*)",
      "Bash(git log --no-show-linear-break:*)",
      "Bash(git log --graph:*)",
      "Bash(git log --no-graph:*)",
      "Bash(git log --decorate:*)",
      "Bash(git log --no-decorate:*)",
      "Bash(git log --decorate-refs:*)",
      "Bash(git log --decorate-refs-exclude:*)",
      "Bash(git log --source:*)",
      "Bash(git log --no-source:*)",
      "Bash(git log --use-mailmap:*)",
      "Bash(git log --no-mailmap:*)",
      "Bash(git log --full-history:*)",
      "Bash(git log --no-full-history:*)",
      "Bash(git log --simplify-merges:*)",
      "Bash(git log --no-simplify-merges:*)",
      "Bash(git log --simplify-by-decoration:*)",
      "Bash(git log --no-simplify-by-decoration:*)",
      "Bash(git log --sparse:*)",
      "Bash(git log --no-sparse:*)",
      "Bash(git log --dense:*)",
      "Bash(git log --no-dense:*)",
      "Bash(git log --follow:*)",
      "Bash(git log --no-follow:*)",
      "Bash(git log --find-renames:*)",
      "Bash(git log --no-find-renames:*)",
      "Bash(git log --find-copies:*)",
      "Bash(git log --no-find-copies:*)",
      "Bash(git log --find-copies-harder:*)",
      "Bash(git log --no-find-copies-harder:*)",
      "Bash(git log --break-rewrites:*)",
      "Bash(git log --no-break-rewrites:*)",
      "Bash(git log --find-objects:*)",
      "Bash(git log --no-find-objects:*)",
      "Bash(git log --diff-filter:*)",
      "Bash(git log --no-diff-filter:*)",
      "Bash(git log --name-only:*)",
      "Bash(git log --no-name-only:*)",
      "Bash(git log --name-status:*)",
      "Bash(git log --no-name-status:*)",
      "Bash(git log --full-diff:*)",
      "Bash(git log --no-full-diff:*)",
      "Bash(git log --binary:*)",
      "Bash(git log --no-binary:*)",
      "Bash(git log --cc:*)",
      "Bash(git log --no-cc:*)",
      "Bash(git log --combined-all-paths:*)",
      "Bash(git log --no-combined-all-paths:*)",
      "Bash(git log --dirstat:*)",
      "Bash(git log --no-dirstat:*)",
      "Bash(git log --cumulative:*)",
      "Bash(git log --no-cumulative:*)",
      "Bash(git log --summary:*)",
      "Bash(git log --no-summary:*)",
      "Bash(git log --stat:*)",
      "Bash(git log --no-stat:*)",
      "Bash(git log --shortstat:*)",
      "Bash(git log --no-shortstat:*)",
      "Bash(git log --numstat:*)",
      "Bash(git log --no-numstat:*)",
      "Bash(git log --raw:*)",
      "Bash(git log --no-raw:*)",
      "Bash(git log --patch:*)",
      "Bash(git log --no-patch:*)",
      "Bash(git log --check:*)",
      "Bash(git log --no-check:*)",
      "Bash(git log --exit-code:*)",
      "Bash(git log --no-exit-code:*)",
      "Bash(git log --quiet:*)",
      "Bash(git log --no-quiet:*)",
      "Bash(git log --ws-error-highlight:*)",
      "Bash(git log --ws-error-highlight=old:*)",
      "Bash(git log --ws-error-highlight=new:*)",
      "Bash(git log --ws-error-highlight=context:*)",
      "Bash(git log --ws-error-highlight=all:*)",
      "Bash(git log --ws-error-highlight=default:*)",
      "Bash(git log --ignore-space-at-eol:*)",
      "Bash(git log --ignore-space-change:*)",
      "Bash(git log --ignore-all-space:*)",
      "Bash(git log --ignore-blank-lines:*)",
      "Bash(git log --ignore-cr-at-eol:*)",
      "Bash(git log --ignore-space-at-eol:*)",
      "Bash(git log --ignore-space-change:*)",
      "Bash(git log --ignore-all-space:*)",
      "Bash(git log --ignore-blank-lines:*)",
      "Bash(git log --ignore-cr-at-eol:*)",
      "Bash(git log --indent-heuristic:*)",
      "Bash(git log --no-indent-heuristic:*)",
      "Bash(git log --patience:*)",
      "Bash(git log --no-patience:*)",
      "Bash(git log --histogram:*)",
      "Bash(git log --no-histogram:*)",
      "Bash(git log --minimal:*)",
      "Bash(git log --no-minimal:*)",
      "Bash(git log --compaction-heuristic:*)",
      "Bash(git log --no-compaction-heuristic:*)",
      "Bash(git log --anchored:*)",
      "Bash(git log --no-anchored:*)",
      "Bash(git log --exclude:*)",
      "Bash(git log --no-exclude:*)",
      "Bash(git log --include:*)",
      "Bash(git log --no-include:*)",
      "Bash(git log --ext-diff:*)",
      "Bash(git log --no-ext-diff:*)",
      "Bash(git log --textconv:*)",
      "Bash(git log --no-textconv:*)",
      "Bash(git log --text:*)",
      "Bash(git log --no-text:*)",
      "Bash(git log --ignore-submodules:*)",
      "Bash(git log --no-ignore-submodules:*)",
      "Bash(git log --submodule:*)",
      "Bash(git log --no-submodule:*)",
      "Bash(git log --submodule=log:*)",
      "Bash(git log --submodule=diff:*)",
      "Bash(git log --submodule=short:*)",
      "Bash(git log --submodule=long:*)"
    ],
    "deny": []
  }
}